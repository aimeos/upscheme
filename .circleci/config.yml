# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2

jobs:
  "php-7.1 / mariadb-10":
    docker:
      - image: aimeos/ci-php:7.1
      - image: cimg/mariadb:10.3
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: upscheme
          MYSQL_USER: upscheme
          MYSQL_PASSWORD: upscheme
    steps:
      - checkout
      - restore_cache:
          keys:
            - php71-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php71-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: echo "<?php return ['driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'dbname' => 'upscheme', 'user' => 'upscheme', 'password' => 'upscheme'];" > tests/config.php
      - run: ./vendor/bin/phpunit

  "php-7.2 / mysql-5.7":
    docker:
      - image: aimeos/ci-php:7.2
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: upscheme
          MYSQL_USER: upscheme
          MYSQL_PASSWORD: upscheme
    steps:
      - checkout
      - restore_cache:
          keys:
            - php72-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php72-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: echo "<?php return ['driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'dbname' => 'upscheme', 'user' => 'upscheme', 'password' => 'upscheme'];" > tests/config.php
      - run: ./vendor/bin/phpunit

  "php-7.3 / pgsql-13":
    docker:
      - image: aimeos/ci-php:7.3
      - image: cimg/postgres:14.0
        environment:
          POSTGRES_PASSWORD: upscheme
          POSTGRES_USER: upscheme
          POSTGRES_DB: upscheme
    steps:
      - checkout
      - restore_cache:
          keys:
            - php73-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php73-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 5432 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: echo "<?php return ['driver' => 'pdo_pgsql', 'host' => '127.0.0.1', 'dbname' => 'upscheme', 'user' => 'upscheme', 'password' => 'upscheme'];" > tests/config.php
      - run: ./vendor/bin/phpunit

  "php-7.4 / mysql-8.0":
    docker:
      - image: aimeos/ci-php:7.4
      - image: cimg/mysql:8.0
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: upscheme
          MYSQL_USER: upscheme
          MYSQL_PASSWORD: upscheme
    steps:
      - checkout
      - restore_cache:
          keys:
            - php74-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php74-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: for i in `seq 1 10`; do nc -z 127.0.0.1 3306 && echo OK && exit 0; echo -n .; sleep 1; done
      - run: echo "<?php return ['driver' => 'pdo_mysql', 'host' => '127.0.0.1', 'dbname' => 'upscheme', 'user' => 'upscheme', 'password' => 'upscheme'];" > tests/config.php
      - run: ./vendor/bin/phpunit

  "php-8.0 / oracle-11":
    docker:
      - image: aimeos/ci-php:8.0
      - image: gvenzl/oracle-xe:11-slim
        environment:
          ORACLE_PASSWORD: oracle
    steps:
      - checkout
      - restore_cache:
          keys:
            - php80-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php80-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "<?php return ['driver' => 'pdo_oci', 'host' => '127.0.0.1', 'dbname' => 'XE', 'user' => 'upscheme', 'password' => 'upscheme'];" > tests/config.php
      - run: echo "CREATE USER upscheme IDENTIFIED BY upscheme;" > init.sql && echo "GRANT DBA TO upscheme;" >> init.sql && echo "quit" >> init.sql
      - run: for i in `seq 1 5`; do sqlplus -L system/oracle@127.0.0.1 @init.sql && exit 0; echo -n .; sleep 5; done
      - run: ./vendor/bin/phpunit || true

  "php-8.1 / mssql-2019":
    docker:
      - image: aimeos/ci-php:8.0
      - image: mcr.microsoft.com/mssql/server:2019-latest
        environment:
          SA_PASSWORD: S3c0r3P4ss
          ACCEPT_EULA: Y
    steps:
      - checkout
      - restore_cache:
          keys:
            - php81-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php81-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "CREATE DATABASE upscheme;" > sqlserver.sql; for i in `seq 1 5`; do /opt/mssql-tools/bin/sqlcmd -S 127.0.0.1 -U SA -P 'S3c0r3P4ss' -i sqlserver.sql && exit 0; sleep 3; done
      - run: echo "<?php return ['driver' => 'pdo_sqlsrv', 'host' => '127.0.0.1', 'dbname' => 'upscheme', 'user' => 'SA', 'password' => 'S3c0r3P4ss'];" > tests/config.php
      - run: ./vendor/bin/phpunit || true

  "php-8.2 / sqlite":
    docker:
      - image: aimeos/ci-php:8.2
    steps:
      - checkout
      - restore_cache:
          keys:
            - php82-{{ checksum "composer.json" }}
      - run: composer update -n --prefer-dist
      - save_cache:
          key: php82-{{ checksum "composer.json" }}
          paths: [./vendor]
      - run: echo "<?php return ['driver' => 'pdo_sqlite', 'path' => 'sqlite.test'];" > tests/config.php
      - run: ./vendor/bin/phpunit --coverage-clover coverage.xml
      - run: ./vendor/bin/php-coveralls -vvv -o coverage.json -x coverage.xml

workflows:
  version: 2
  unittest:
    jobs:
      - "php-7.1 / mariadb-10"
      - "php-7.2 / mysql-5.7"
      - "php-7.3 / pgsql-13"
      - "php-7.4 / mysql-8.0"
      - "php-8.0 / oracle-11"
      - "php-8.1 / mssql-2019"
      - "php-8.2 / sqlite"
